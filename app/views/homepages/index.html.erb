<h1>The endangerment of Elephants and Rhinoceros</h1>


<script>

//  pie chart
   d3.json("/animals.json", function(data) {
  	// var data = [10, 50, 70]

  	var r = 150;
    var p = Math.PI * 2;

    var width = 400;
    var height = 400;

    var color = d3.scale.ordinal()
    	.range(["pink", "orange", "red", "yellow", "green", "blue", "purp"])

  	var canvas = d3.select('body')
		.append("svg")
		.attr("width", width)
		.attr("height", height);

	
    var group = canvas.append("g")
    	.attr("transform", "translate(300, 300)");

	var arc = d3.svg.arc()
		.innerRadius(100)
		.outerRadius(r)
	    .startAngle(0)
		.endAngle(p)

	var pie = d3.layout.pie()
		.value(function(d) { return d; });

	var arcs = group.selectAll(".arc")
		.data(pie(data))
		.enter()
		.append("g")
		.attr("class", "arc");

// *one cirlce is equivelant to 6.28 radiants
	arcs.append("path")
		.attr("d", arc)	
		.attr("fill", function(d) { return color(d.data); });

	arcs.append("text")
		.attr("transform", function(d) { return "translate (" + arc.centroid(d) + ") "; })
		.attr("text-anchor", "middle")
		.attr("font-size", "1.5")
		.text(function(d) { return d.data; });
 });



// box chart-------------------
 d3.json("/animals.json", function(data) {
 //    var dataArray = [20, 40, 100, 300, 458];
    var width = 1100;
    var height = 500;

    var widthScale = d3.scale.linear()
        // .base(10)
    	.domain([0, 20000])
    	.range([0, width - 50]);

    var color = d3.scale.linear()
    	.domain([0, 20000])
    	.range(["yellow", "green"]);

    var axis = d3.svg.axis()
    	.ticks(10)
    	.scale(widthScale);
	
	var canvas = d3.select('body')
		.append("svg")
		.attr("width", width)
		.attr("height", height)
		.append("g")
		.attr("transform", "translate(20, 40)");

	var bars = canvas.selectAll("rect")
		.data(data)
		.enter()
			.append("rect")
			.attr("width", function(d) {return widthScale(d.population) })
			.attr("height", 40)
			.attr("fill", function(d) { return color(d.population) })
			.attr("y", function(d, i) { return i * 40 });

    canvas.selectAll("text")
    	.data(data)
    	.enter()
    		.append("text")
    		.attr("fill", "black")
    		.attr("y", function(d, i) { return i * 40 + 24; })
    		.text(function(d) {return d.name; });

	canvas.append("g")
		.attr("transform", "translate(0, 300)")
		.call(axis);


});


// making a circle-----------------
    // var circle = canvas.append("circle")
    //     .attr("cx", 250)
    //     .attr("cy", 250)
    //     .attr("r", 50)
    //     .attr("fill", "pink");

   

// loading external files--------------------

//     d3.json("/animals.json", function(data) {  
//     	console.log(data, "heyy");
//     var canvas = d3.select("body").append("svg")
//     	.attr("width", 1000)
//     	.attr("height", 500);

//     canvas.selectAll("rect")
//     	.data(data)
//     	.enter()
//     		.append("rect")
//     		.attr("width", function(d) { return d.population / 20; })
//     		.attr("height", 20)
//     		.attr("y", function(d, i) { return i * 20; })
//     		.attr("fill", "pink");

//       var axis = canvas.axis()
//     	.ticks(10)
//     	.scale(widthScale);

//     canvas.selectAll("text")
//     	.data(data)
//     	.enter()
//     		.append("text")
//     		.attr("fill", "black")
//     		.attr("y", function(d, i) { return i * 20 + 14; })
//     		.text(function(d) {return d.name; });
// });
   
// need a container(canvas) for elements----------------- 

    // var data = [10, 30, 40, 55, 79];

    // var canvas = d3.select("body")
    // 	.append("svg")
    // 	.attr("width", 500)
    // 	.attr("height", 500);
    
//  circle start turn blue and end turn pink when moving---------------
// var circle = canvas.append("circle")
//     		.attr("cx", 50)
//     		.attr("cy", 100)
//     		.attr("r", 25);

// circle.transition()
//     	.duration(1500)
//     	.attr("cx", 150)
//     	.each("start", function() { d3.select(this).attr("fill", "blue") })
//     	.each("end", function() { d3.select(this).attr("fill", "pink") });

// transitions for the circle, makes it move to the right, down and right agian-----
    // circle.transition()
    // 	.duration(1500)
    // 	.delay(1000)
    // 		.attr("cx", 150)
    // 	.transition()
    // 		.attr("cy", 200)
    // 	.transition()
    // 		.attr("cx", 50)


// circles with enter, update, exit--------------
    // var circle2 = canvas.append("circle")
    // 		.attr("cx", 50)
    // 		.attr("cy", 200)
    // 		.attr("r", 25);

    // var circles = canvas.selectAll("circle")
    // 	.data(data)
    // 	.attr("fill", "pink")
    // 	.exit()
    // 		.attr("fill", "blue");


// for DOM elements  the "enter" -----------------------
    	// .attr("fill", "red")
    	// .enter()
    	// 	.append("circle")
    	// 	.attr("cx", 50)
    	// 	.attr("cy", 50)
    	// 	.attr("fill", "pink")
    	// 	.attr("r", 25);
    


</script>

